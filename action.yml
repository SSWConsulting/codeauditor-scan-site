name: CodeAuditor Workflow
description: This is an action that creates new issues if there is an increase in the number of errors found from CodeAuditor scan
author: Tom Bui
branding:
  icon: 'paperclip'
  color: 'red'

inputs:
  token:
    description: 'Your CodeAuditor token'
    required: true
  url:
    description: 'Your URL'
    required: true
  GitHub_Token:
    description: 'Your GitHub Token'
    required: true
  AlertIssue:
    description: 'Switch on/off auto-generated alert issue'
    required: false
    default: true
  GoMaxthread:
    description: 'Set maximum number of threads for Link Scanning (Default to 100)'
    required: false
    default: 100

runs:
  using: "composite"
  steps:
    - name: Get input
      shell: bash
      run: |
        inputs=($INPUTS)
    - name: "SSW CodeAuditor - Check broken links and performance"
      shell: bash
      continue-on-error: true
      run: |
        docker run sswconsulting/codeauditor --token ${{inputs.token}} --url ${{inputs.url}} --maxthread {{inputs.GoMaxthread}}
    - name: "Check if new broken links/code errors/code warnings has come up"
      shell: bash
      run: |
        curl \
            -X POST 'https://asia-east2-sswlinkauditor-c1131.cloudfunctions.net/api/comparescanlatestandsecond/${{inputs.token}}' \
            -H 'Content-Type: application/json' \
            -d '{"url": "${{inputs.url}}"}' \
            -o content.json  
    - name: output api content
      shell: bash
      id: content
      run: echo "contentOut=$(cat content.json)" >> $GITHUB_OUTPUT
    - name: Check for existing open issue
      shell: bash
      id: check_issue
      env:
        GH_TOKEN: ${{inputs.GitHub_Token}}
      run: |
        ISSUE_NUMBER=$(gh issue list --state=open --json number,title | jq -r '.[] | select(.title == "❗️ CodeAuditor Alert - Increased errors detected") | .number')
        if [ -z "$ISSUE_NUMBER" ]; then
          echo "No open issue found"
        else
          echo "Existing open issue found with number $ISSUE_NUMBER"
          echo issue_number=$ISSUE_NUMBER >> $GITHUB_OUTPUT
        fi
    - name: Comment on existing issue
      shell: bash
      id: comment_or_create
      if: ${{inputs.AlertIssue == 'true' && steps.check_issue.outputs.issue_number}}
      env:
        GH_TOKEN: ${{inputs.GitHub_Token}}
      run: |
        if ${{ fromJson(steps.content.outputs.contentOut).isHtmlWarningsUp }}; then
          gh issue comment ${{ steps.check_issue.outputs.issue_number }} --body "
          ## New HTML Warnings detected
          
          ⚠️ The number of HTML Warnings has gone up by **$((${{fromJson(steps.content.outputs.contentOut).currHtmlWarnings}} - ${{fromJson(steps.content.outputs.contentOut).prevHtmlWarnings}}))** from **${{fromJson(steps.content.outputs.contentOut).prevHtmlWarnings}}** to **${{fromJson(steps.content.outputs.contentOut).currHtmlWarnings}}**
          
          See [Latest Scan Details ](https://codeauditor.com/build/${{fromJson(steps.content.outputs.contentOut).latestRunId}})
          
          - [ ] Please fix remaining HTML Warnings"
        fi

        if ${{ fromJson(steps.content.outputs.contentOut).isHtmlErrorsUp }}; then
          gh issue comment ${{ steps.check_issue.outputs.issue_number }} --body "
          ## New HTML Errors detected
          
          ❌ The number of HTML Errors has gone up by **$((${{fromJson(steps.content.outputs.contentOut).currHtmlErrors}} - ${{fromJson(steps.content.outputs.contentOut).prevHtmlErrors}}))** from **${{fromJson(steps.content.outputs.contentOut).prevHtmlErrors}}** to **${{fromJson(steps.content.outputs.contentOut).currHtmlErrors}}**
          
          See [Latest Scan Details ](https://codeauditor.com/build/${{fromJson(steps.content.outputs.contentOut).latestRunId}})
          
          - [ ] Please fix remaining HTML Errors"
        fi

        if ${{ fromJson(steps.content.outputs.contentOut).isBrokenLinksUp }}; then
          gh issue comment ${{ steps.check_issue.outputs.issue_number }} --body "
          ## New Broken Links detected
          
          ❗ The number of Broken Links has gone up by **$((${{fromJson(steps.content.outputs.contentOut).currBrokenLinks}} - ${{fromJson(steps.content.outputs.contentOut).prevBrokenLinks}}))** from **${{fromJson(steps.content.outputs.contentOut).prevBrokenLinks}}** to **${{fromJson(steps.content.outputs.contentOut).currBrokenLinks}}**
          
          See [Latest Scan Details ](https://codeauditor.com/build/${{fromJson(steps.content.outputs.contentOut).latestRunId}})
          
          - [ ] Please fix remaining Broken Links"
        fi
    - name: Create new issue if no existing open issue
      shell: bash
      id: create_issue
      if: ${{inputs.AlertIssue == 'true' && !steps.check_issue.outputs.issue_number}}
      env:
        GH_TOKEN: ${{inputs.GitHub_Token}}
      run: |
        if ${{ fromJson(steps.content.outputs.contentOut).isHtmlWarningsUp || fromJson(steps.content.outputs.contentOut).isHtmlErrorsUp || fromJson(steps.content.outputs.contentOut).isBrokenLinksUp }}; then
          gh issue create --title "❗️ CodeAuditor Alert - Increased errors detected" --body "
          ## New Errors Detected
          
          See [Latest Scan Details ](https://codeauditor.com/build/${{fromJson(steps.content.outputs.contentOut).latestRunId}})
          
          - [ ] Please fix"
        fi
    - name: "Check latest scan summaries"
      shell: bash
      run: |
        curl \
            -X POST 'https://asia-east2-sswlinkauditor-c1131.cloudfunctions.net/api/latest/${{inputs.token}}' \
            -H 'Content-Type: application/json' \
            -d '{"url": "${{inputs.url}}"}' \
            -o summaries.json  
    - name: output summaries api
      shell: bash
      id: summaries
      run: echo "summariesOut=$(cat summaries.json)" >> $GITHUB_OUTPUT
    - name: Job Summaries
      shell: bash
      run: |
        echo "### Scan Summaries 🚀" >> $GITHUB_STEP_SUMMARY

        echo "See [All Scan Details](https://codeauditor.com/build/${{fromJson(steps.summaries.outputs.summariesOut).summary[0].runId}})" >> $GITHUB_STEP_SUMMARY

        if ${{fromJson(steps.content.outputs.contentOut).isHtmlWarningsUp}}
        then
          echo "⚠️ The number of HTML Warnings has gone up by $((${{fromJson(steps.content.outputs.contentOut).currHtmlWarnings}} - ${{fromJson(steps.content.outputs.contentOut).prevHtmlWarnings}})) from ${{fromJson(steps.content.outputs.contentOut).prevHtmlWarnings}} to ${{fromJson(steps.content.outputs.contentOut).currHtmlWarnings}}" >> $GITHUB_STEP_SUMMARY
        fi

        if ${{fromJson(steps.content.outputs.contentOut).isHtmlErrorsUp}}
        then
          echo "❌ The number of HTML Errors has gone up by **$((${{fromJson(steps.content.outputs.contentOut).currHtmlErrors}} - ${{fromJson(steps.content.outputs.contentOut).prevHtmlErrors}}))** from **${{fromJson(steps.content.outputs.contentOut).prevHtmlErrors}}** to **${{fromJson(steps.content.outputs.contentOut).currHtmlErrors}}**" >> $GITHUB_STEP_SUMMARY
        fi

        if ${{fromJson(steps.content.outputs.contentOut).isBrokenLinksUp}}
        then
          echo "❗ The number of Broken Links has gone up by **$((${{fromJson(steps.content.outputs.contentOut).currBrokenLinks}} - ${{fromJson(steps.content.outputs.contentOut).prevBrokenLinks}}))** from **${{fromJson(steps.content.outputs.contentOut).prevBrokenLinks}}** to **${{fromJson(steps.content.outputs.contentOut).currBrokenLinks}}**" >> $GITHUB_STEP_SUMMARY
        fi

        ## Scan Details Summary

        echo "|                             | Values                                                              |" >> $GITHUB_STEP_SUMMARY
        echo "| --------------------------- | ------------------------------------------------------------------- |" >> $GITHUB_STEP_SUMMARY
        echo "|   **Url**                   | ${{fromJson(steps.summaries.outputs.summariesOut).summary[0].url}}            |" >> $GITHUB_STEP_SUMMARY
        echo "|   **Timestamp**             | ${{fromJson(steps.summaries.outputs.summariesOut).summary[0].timestamp}}      |" >> $GITHUB_STEP_SUMMARY
        echo "|   **Total Links Scanned**   | ${{fromJson(steps.summaries.outputs.summariesOut).summary[0].totalScanned}}   |" >> $GITHUB_STEP_SUMMARY
        echo "|   **Broken Links**          | ${{fromJson(steps.summaries.outputs.summariesOut).summary[0].totalUnique404}} |" >> $GITHUB_STEP_SUMMARY
        echo "|   **HTML Errors**           | ${{fromJson(steps.summaries.outputs.summariesOut).summary[0].htmlErrors}}     |" >> $GITHUB_STEP_SUMMARY
        echo "|   **HTML Warnings**         | ${{fromJson(steps.summaries.outputs.summariesOut).summary[0].htmlWarnings}}   |" >> $GITHUB_STEP_SUMMARY
